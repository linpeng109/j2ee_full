<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 过滤器栈堆 -->
    <security:http auto-config='true'>
        <security:csrf disabled="true"/>
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <security:form-login login-page="/login.jsp"/>
        <security:logout logout-success-url="/index.jsp"/>
        <security:custom-filter ref="customLogoutFilter" before="LOGOUT_FILTER"/>
        <security:custom-filter ref="customLoginFilter" before="FORM_LOGIN_FILTER"/>
    </security:http>

    <!-- 自定义登录过滤器 -->
    <bean id="customLoginFilter" class="com.cn.security.CustomLoginFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationSuccessHandler">
            <bean id="customLoginSuccessHandler" class="com.cn.security.CustomLoginSuccessHandler"/>
        </property>
    </bean>

    <!-- 自定义退出过滤器 -->
    <bean id="customLogoutFilter" class="com.cn.security.CustomLogoutFilter">
        <!-- 处理退出的虚拟url -->
        <constructor-arg index="0" value="/index.jsp"/>
        <constructor-arg index="1">
            <!-- 退出成功后的handler列表 -->
            <array>
                <bean id="securityContextLogoutHandler"
                      class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
                <!-- 加入了开发人员自定义的退出成功处理 -->
                <bean id="customLogoutHandler" class="com.cn.security.CustomLogoutSuccessHandler"/>
            </array>
        </constructor-arg>
    </bean>

    <!-- 管理用户权限 -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <!--配置用户-->
            <!--
                        <security:user-service>
                            <security:user name="abcde" authorities="ROLE_ADMIN"
                                           password="abcde"/>
                        </security:user-service>
            -->
            <!--数据库用户-->
            <security:jdbc-user-service
                    authorities-by-username-query="SELECT U.username, A.authorityString FROM userbase U JOIN userbase_authority R ON R.userId = U.userId JOIN authority A ON A.authorityId = R.authorityId WHERE U.username=?"
                    users-by-username-query="SELECT username,password,enabled FROM userbase U where U.username=?"
                    data-source-ref="dataSource"/>
        </security:authentication-provider>

    </security:authentication-manager>


</beans>