import com.sun.org.apache.xalan.internal.xsltc.cmdline.Compile

description = 'J2ee full by Gradle'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'com.bmuschko.cargo'
apply plugin: 'com.bmuschko.cargo-base'

sourceCompatibility = JavaVersion.VERSION_1_8

/**
 * 2015.12.25/2016.08.07/2016.11.23
 */
version = '2016.11.23'

def workset_home = 'd:/'

ext {

    /**
     * cn.jpush.api:jiguang-common
     * <0.1.3>/<0.1.6>
     */
    //jiguangCommonVersion = "0.1.6"

    /**
     * org.springframework.ws
     * 2.1.4.RELEASE/<2.4.0.RELEASE>
     */
    //springwsVersion = '2.4.0.RELEASE'


}

/**
 * Gradle plugin supporting deployment of your web application to an embedded Tomcat web container.
 */
buildscript {
    repositories {
        jcenter()
    }

    /**
     * com.bmuschko
     * 2.2.2/2.2.3/2.2.4*
     */
    def gradleTomcatPluginVersion = '2.2.4'
    dependencies {
        classpath("com.bmuschko:gradle-tomcat-plugin:$gradleTomcatPluginVersion")
    }
}

/**
 * Gradle plugin that provides deployment capabilities to local and remote containers via Cargo.
 */
buildscript {
    repositories {
        jcenter()
    }

    /**
     * com.bmuschko
     * 2.1.1/2.2.1
     */
    def gradleCargoPluginVersion = '2.2.1'
    dependencies {
        classpath("com.bmuschko:gradle-cargo-plugin:$gradleCargoPluginVersion")
    }
}

/**
 * repositories
 */
repositories {
    jcenter()
    mavenCentral()
    maven { url "http://repo.spring.io/release" }
    ivy {
        url("$workset_home/ivy_repository")
    }
}

/**
 * Dependencies
 */
dependencies {
    /**
     * Puts together an ActiveMQ jar bundle
     * org.apache.activemq:activemq-all
     * <5.11.1>/5.12.0#/5.13.0#/5.14.0#/5.14.1#
     */
    def activemqVersion = '5.14.1'
    compile("org.apache.activemq:activemq-jms-pool:$activemqVersion")
    compile("org.apache.activemq:activemq-ra:$activemqVersion")

    /**
     * Flex Messaging
     * 4.7.0/4.7.1/4.7.2
     */
    def blazedsVersion = '4.7.2'
    compile("org.apache.flex.blazeds:flex-messaging-core:$blazedsVersion",
            "org.apache.flex.blazeds:flex-messaging-common:$blazedsVersion",
            "org.apache.flex.blazeds:flex-messaging-opt:$blazedsVersion",
            "org.apache.flex.blazeds:flex-messaging-proxy:$blazedsVersion",
            "org.apache.flex.blazeds:flex-messaging-remoting:$blazedsVersion",
            "org.apache.flex.blazeds:blazeds:$blazedsVersion")

    /**
     *  The Apache Cassandra Project develops a highly scalable second-generation distributed database, bringing
     *  together Dynamo's fully distributed design and Bigtable's ColumnFamily-based data model.
     * org.apache.cassandra:cassandra-all
     * 2.2.0/2.2.1/2.2.3/3.0.0/3.7/<3.9>
     */
    def cassandraVersion = '3.9'
    compile("org.apache.cassandra:cassandra-all:$cassandraVersion") {
        exclude(module: 'logback-classic')
        exclude(module: 'log4j-over-slf4j')
        exclude(module: 'httpclient')
    }

    /**
     * 3.0.0-rc1#/3.1.1#/<2.1.10.3>
     */
    def cassandraDriverDseVersion = '2.1.10.3'
    compile 'com.datastax.cassandra:cassandra-driver-dse:$cassandraDriverDseVersion'

    /**
     * A JDBC Connection pooling / Statement caching library
     * com.mchange:c3p0
     * 0.9.5.1/<0.9.5.2>
     */
    def c3p0Version = '0.9.5.2'
    compile("com.mchange:c3p0:$c3p0Version")

    /**
     * Code generation library with shaded ASM dependecies
     * cglib:cglib-nodep
     * 3.1/3.2.0/<3.2.4>
     */
    def cglibVersion = '3.2.4'
    compile("cglib:cglib-nodep:$cglibVersion")

    /**
     * Apache CXF Runtime JAX-WS Frontend
     * Apache CXF Runtime HTTP Transport
     * org.apache.cxf:cxf-rt-frontend-jaxws
     * 3.1.2/3.1.3/3.1.4/3.1.7/<3.1.8>
     */
    def apacheCxfVersion = '3.1.8'
    compile("org.apache.cxf:cxf-rt-frontend-jaxws:$apacheCxfVersion",
            "org.apache.cxf:cxf-rt-transports-http:$apacheCxfVersion")

    /**
     * Ehcache is an open source, standards-based cache used to boost performance,
     * offload the database and simplify scalability. Ehcache is robust, proven and
     * full-featured and this has made it the most widely-used Java-based cache.
     * net.sf.ehcache:ehcache
     * 2.9.0/2.10.1/2.10.2.2.21/<2.10.3>
     */
    def ehcacheVersion = '2.10.3'
    runtime("net.sf.ehcache:ehcache:$ehcacheVersion")

    /**
     * Apache FtpServer
     * org.apache.ftpserver:ftpserver
     * 1.0.6/<1.1.0>
     */
    def ftpserverVersion = '1.1.0'
    compile("org.apache.ftpserver:ftpserver:$ftpserverVersion") {
        exclude(module: 'slf4j-log4j12')
    }

    /**
     * A library for testing websites programmatically
     * org.httpunit:httpunit
     * <1.7.2>
     */
    def httpunitVersion = '1.7.2'
    compile("org.httpunit:httpunit:$httpunitVersion") {
        exclude(module: 'servlet-api')
    }

    /**
     * Apache HttpComponents Client
     * <4.5.2>
     */
    def httpcomponentsVersion = '4.5.2'
    compile("org.apache.httpcomponents:httpclient:$httpcomponentsVersion")

    /**
     * The core O/RM functionality as provided by Hibernate
     * org.hibernate:hibernate-core
     * 5.0.0.CR2/5.0.0.CR4/5.0.0.Final/5.0.1.Final/5.0.2.Final/5.0.3.Final/5.0.5.Final/5.2.2.Final/<5.2.4.Final>
     */
    def hibernateVersion = '5.2.4.Final'
    compile("org.hibernate:hibernate-core:$hibernateVersion",
            "org.hibernate:hibernate-c3p0:$hibernateVersion",
            "org.hibernate:hibernate-ehcache:$hibernateVersion",
            "org.hibernate:hibernate-entitymanager:$hibernateVersion",
            "org.hibernate:hibernate-envers:$hibernateVersion",
            "org.hibernate:hibernate-testing:$hibernateVersion")

    /**
     * Hibernate Search integration with Hibernate Core
     * org.hibernate:hibernate-search-orm
     * 5.4.0.CR2/5.5.0.Final/5.5.1.Final/<5.5.5.Final>
     */
    def hibernateSearchVersion = '5.5.5.Final'
    compile("org.hibernate:hibernate-search-orm:$hibernateSearchVersion")

    /**
     * Javassist (JAVA programming ASSISTant) makes Java bytecode manipulation simple.
     * It is a class library for editing bytecodes in Java.
     * org.javassist:javassist
     * <3.20.0-GA>/<3.22.0-CR1>
     */
    def javassistVersion = '3.22.0-CR1'
    compile("org.javassist:javassist:$javassistVersion")

    /**
     * Jaxen is a universal Java XPath engine.
     * jaxen:jaxen
     * <1.1.6>
     */
    def jaxenVersion = '1.1.6'
    compile("jaxen:jaxen:$jaxenVersion")

    /**
     * JSR 356: Java API for WebSocket
     * org.apache.httpcomponents:httpclient
     * <4.5.2>
     */
    def javaxWebsocketVersion = '1.1'
    compile("javax.websocket:javax.websocket-api:$javaxWebsocketVersion")

    /**
     * JEP is a Java library for parsing and evaluating mathematical expressions.
     *
     */
    def jepVersion = '2.4.2'
    compile("org.scijava:jep:$jepVersion")

    /**
     * jPOS is an ISO-8583 based financial transaction library/framework that can be customized
     * and extended in order to implement financial interchanges.
     * org.jpos:jpos
     * 2.0.2/2.0.4/<2.0.6>/<2.0.8>#
     */
    def jposVersion = '2.0.6'
    compile("org.jpos:jpos:$jposVersion")

    /**
     * JPush's officially supported Java client library for accessing JPush APIs.
     * cn.jpush.api:jpush-client
     * 3.2.8/3.2.10/<3.2.11>
     */
    def jpushClientVersion = "3.2.11"
    compile("cn.jpush.api:jpush-client:$jpushClientVersion")

    /**
     * Jiguang common dependecies for jiguang java client.
     */
    //compile "cn.jpush.api:jiguang-common:$jiguangCommonVersion";

    /**
     * JSON is a light-weight, language independent, data interchange format.
     * org.codehaus.jackson:jackson-core-asl
     * <1.9.13>
     */
    def jacksonVersion = '1.9.13'
    compile "org.codehaus.jackson:jackson-core-asl:$jacksonVersion",
            "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"

    /**
     * org.codehaus.jettison:jettison
     * 1.2/1.3.7/<1.3.8>
     */
    def jettisonVersion = '1.3.8'
    compile "org.codehaus.jettison:jettison:$jettisonVersion"

    /**
     * com.alibaba:fastjson
     * 1.2.7/<1.2.21>
     */
    def fastjsonVersion = '1.2.21'
    compile "com.alibaba:fastjson:$fastjsonVersion"

    /**
     * org.apache.logging.log4j:log4j-core
     * 2.7
     */
    def log4jVersion = '2.7'
    compile "org.apache.logging.log4j:log4j-core:$log4jVersion"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"

    /**
     * Apache Lucene Java Core
     * org.apache.lucene:lucene-core
     * 4.10.4/5.3.0/<5.3.1>/6.1.0#/6.3.0#
     */
    def luceneVersion = '5.3.1'
    compile("org.apache.lucene:lucene-core:$luceneVersion",
            "org.apache.lucene:lucene-analyzers-common:$luceneVersion",
            "org.apache.lucene:lucene-queryparser:$luceneVersion",
            "org.apache.lucene:lucene-test-framework:$luceneVersion",
            "org.apache.lucene:lucene-analyzers-smartcn:$luceneVersion")

    /**
     * MySQL JDBC Type 4 driver
     * mysql:mysql-connector-java
     * 5.1.36/5.1.37/<6.0.3>/<6.0.5>
     */
    def mysqlConnectorJavaVersion = '6.0.5'
    compile("mysql:mysql-connector-java:$mysqlConnectorJavaVersion")

    /**
     * Enables memcached caching in Spring beans via annotations
     * com.google.code.simple-spring-memcached:simple-spring-memcached
     * 3.6.0/<3.6.1>
     */
    def simpleSpringMemcachedVersion = "3.6.1"
    compile("com.google.code.simple-spring-memcached:simple-spring-memcached:$simpleSpringMemcachedVersion",
            "com.google.code.simple-spring-memcached:xmemcached-provider:$simpleSpringMemcachedVersion")

    /**
     * Oracle JDBC Driver For Java Oracle.jdbc.driver.OracleDriver Ojdbc6
     * com.oracle:ojdbc14
     * 11.2.0.4.0
     */
    def oracleDriverOjdbc6Version = '11.2.0.4.0'
    compile("com.oracle:ojdbc14:$oracleDriverOjdbc6Version")

    /**
     * Apache POI - Java API To Access Microsoft Format Files
     * org.apache.poi
     * 3.12/3.13/3.14/<3.15>
     */
    def poiVersion = '3.15'
    compile("org.apache.poi:poi:$poiVersion",
            "org.apache.poi:poi-ooxml:$poiVersion",
            "org.apache.poi:poi-scratchpad:$poiVersion")

    /**
     *
     * com.qiniu:qiniu-java-sdk
     * 7.1.0/7.1.2/<7.2.2>
     */
    def qiniuVersion = '7.2.2'
    compile("com.qiniu:qiniu-java-sdk:$qiniuVersion")

    /**
     * Enterprise Job Scheduler
     * org.quartz-scheduler:quartz
     * 2.2.1/2.2.2/<2.2.3>
     */
    def quartzVersion = '2.2.3'
    compile("org.quartz-scheduler:quartz:$quartzVersion") {
        exclude(module: 'c3p0')
    }

    /**
     * Spring Core
     * Spring Context
     * Spring Context Support
     * Spring JMS
     * Spring Object/Relational Mapping
     * Spring TestContext Framework
     * Spring Web
     * Spring Web MVC
     * Spring Instrument Tomcat
     * Spring Messaging
     * org.springframework:spring-core
     * 4.1.7.RELEASE/4.2.0.RELEASE/4.2.1.RELEASE/4.2.2.RELEASE/4.3.2.RELEASE/<4.3.4.RELEASE>
     */
    def springVersion = '4.3.4.RELEASE'
    compile("org.springframework:spring-core:$springVersion",
            "org.springframework:spring-context:$springVersion",
            "org.springframework:spring-context-support:$springVersion",
            "org.springframework:spring-jms:$springVersion",
            "org.springframework:spring-orm:$springVersion",
            "org.springframework:spring-test:$springVersion",
            "org.springframework:spring-web:$springVersion",
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-instrument-tomcat:$springVersion",
            "org.springframework:spring-messaging:$springVersion")

    /**
     * spring.batch
     * org.springframework.batch:spring-batch-core
     * 3.0.4.RELEASE/3.0.5.RELEASE/<3.0.7.RELEASE>
     */
    def springbatchVersion = '3.0.7.RELEASE'
    compile("org.springframework.batch:spring-batch-core:$springbatchVersion",
            "org.springframework.batch:spring-batch-test:$springbatchVersion")

    /**
     * Spring Data Redis
     * org.springframework.data:spring-data-redis
     * 1.5.1.RELEASE/1.5.2.RELEASE/1.6.0.RELEASE/1.6.1.RELEASE/<1.6.4.RELEASE>/1.7.1.RELEASE#/1.7.2.RELEASE#/1.7.5.RELEASE#
     */
    def springDataRedisVersion = '1.6.4.RELEASE'
    compile("org.springframework.data:spring-data-redis:$springDataRedisVersion")

    /**
     * Spring Data Cassandra
     */
    def springDataCassandraVersion = '1.4.5.RELEASE'
    compile 'org.springframework.data:spring-data-cassandra:$springDataCassandraVersion'

    /**
     * Spring Support for Flex
     * spring-flex
     * 1.5.3.RELEASE
     */
    def springFlexCoreVersion = '1.5.3.RELEASE'
    compile("org.springframework.flex:spring-flex-core:$springFlexCoreVersion")

    /**
     * Spring Integration Core
     * Spring Integration JMS Support
     * Spring Integration JDBC Support
     * Spring Integration FTP Support
     * Spring Integration Redis Support
     * Spring Integration Groovy Support
     * Spring Integration Stream Support
     * Spring Integration HTTP Support
     * Spring Integration IP Support
     * Spring Integration ApplicationEvent Support
     * Spring Integration Redis Support
     * Spring Integration Groovy Support
     * Spring Integration XMPP Support
     * Spring Integration Syslog Support
     * Spring Integration WebSockets Support
     * org.springframework.integration:spring-integration-core
     * 4.1.6.RELEASE/4.2.0.RELEASE/4.2.1.RELEASE/4.2.2.RELEASE/4.2.3.RELEASE/4.3.1.RELEASE/<4.3.5.RELEASE>
     */
    def springIntegrationVersion = '4.3.5.RELEASE'
    compile("org.springframework.integration:spring-integration-core:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-jms:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-jdbc:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-file:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-feed:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-ftp:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-stream:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-http:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-mail:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-ws:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-xmpp:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-event:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-ip:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-test:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-syslog:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-security:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-websocket:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-groovy:$springIntegrationVersion")

    /**
     * Spring Integration Cassandra Support
     * org.springframework.integration:spring-integration-cassandra
     * 0.5.0.RELEAS
     */
    def springIntegrationCassandraVersion = '0.5.0.RELEASE'
    compile("org.springframework.integration:spring-integration-cassandra:$springIntegrationCassandraVersion")

    /**
     * Spring Integration Kafka Support
     * org.springframework.integration:spring-integration-kafka
     * 1.2.1.RELEASE/1.3.0.RELEASE/2.0.0.RELEASE/<2.1.0.RELEASE>
     */
    def springIntegrationKafkaVersion = '2.1.0.RELEASE'
    compile("org.springframework.integration:spring-integration-kafka:$springIntegrationKafkaVersion") {
        exclude(module: 'slf4j-log4j12')
    }

    /**
     * Spring Security Core
     * Spring Security Web
     * Spring Security Taglibs
     * Spring Security Config
     * Spring Security Test
     * Spring Security Openid
     * Spring Security Cas
     * org.springframework.security:spring-security-core
     * 4.0.2.RELEASE/4.0.3.RELEASE/4.1.1.RELEASE/<4.2.0.RELEASE>
     */
    def springSecurityVersion = '4.2.0.RELEASE'
    compile("org.springframework.security:spring-security-core:$springSecurityVersion",
            "org.springframework.security:spring-security-web:$springSecurityVersion",
            "org.springframework.security:spring-security-taglibs:$springSecurityVersion",
            "org.springframework.security:spring-security-config:$springSecurityVersion",
            "org.springframework.security:spring-security-test:$springSecurityVersion")
    compile("org.springframework.security:spring-security-cas:$springSecurityVersion") {
        exclude(module: 'log4j-over-slf4j')
    }

    /**
     * Struts2 Framework
     * org.apache.struts:struts2-core
     * 2.3.24/2.3.24.1/2.3.24.3/2.5.2/<2.5.5>
     */
    def struts2Version = '2.5.5'
    compile("org.apache.struts:struts2-core:$struts2Version",
            "org.apache.struts:struts2-spring-plugin:$struts2Version",
            "org.apache.struts:struts2-junit-plugin:$struts2Version",
            "org.apache.struts:struts2-jfreechart-plugin:$struts2Version",
            "org.apache.struts:struts2-dwr-plugin:$struts2Version",
            "org.apache.struts:struts2-json-plugin:$struts2Version")

    /**
     * xbean-spring provides a schema-driven proprietary namespace handler for spring contexts
     * org.apache.xbean:xbean-spring
     * 4.3/4.4/<4.5>
     */
    def xbeanSpringVersion = '4.5'
    compile("org.apache.xbean:xbean-spring:$xbeanSpringVersion")

    /**
     * Xerces2 is the next generation of high performance, fully compliant XML parsers in the Apache Xerces family.
     * xerces:xercesImpl
     * 2.11.0
     */
    def xercesImpVersion = '2.11.0'
    compile("xerces:xercesImpl:$xercesImpVersion")

    /**
     * XStream extension for Hibernate 3/4 to untie Java objects from Hibernate.
     * com.thoughtworks.xstream:xstream
     * 1.4.8/<1.4.9>
     */
    def xstreamVersion = '1.4.9'
    compile("com.thoughtworks.xstream:xstream:$xstreamVersion",
            "com.thoughtworks.xstream:xstream-hibernate:$xstreamVersion")

    /**
     * RXTX is a native lib providing serial and parallel communication for the Java Development Toolkit (JDK).
     */
    /**
     * org.rxtx:rxtx
     * <2.1.7>
     */
    def rxtxVerion = '2.1.7'
    compile("org.rxtx:rxtx:$rxtxVerion")

    /**
     * Core barcode encoding/decoding library
     * com.google.zxing
     * 3.2.0/3.2.1/<3.3.0>
     */
    def zxingVersion = '3.3.0'
    compile("com.google.zxing:core:$zxingVersion",
            "com.google.zxing:javase:$zxingVersion")

    /**
     * JUnit is a unit testing framework for Java, created by Erich Gamma and Kent Beck.
     * junit:junit
     * <4.12>
     */
    def junitVersion = '4.12'
    testCompile("junit:junit:$junitVersion")

    /**
     * Tomcat-embed plugin
     * org.apache.tomcat.embed
     * 7.0.63/8.0.24/8.0.26/8.0.28/8.0.29/8.0.30/<8.0.39>
     */
    def tomcatEmbedVersion = '8.0.39'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:$tomcatEmbedVersion",
            "org.apache.tomcat.embed:tomcat-embed-jasper:$tomcatEmbedVersion",
            "org.apache.tomcat.embed:tomcat-embed-logging-log4j:$tomcatEmbedVersion",
            "org.apache.tomcat.embed:tomcat-embed-el:$tomcatEmbedVersion",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:$tomcatEmbedVersion",
            "org.apache.tomcat.embed:tomcat-embed-websocket:$tomcatEmbedVersion"
    compile "org.apache.tomcat:tomcat-servlet-api:$tomcatEmbedVersion"

    /**
     * The Cargo Core Uberjar
     * org.codehaus.cargo:cargo-core-uberjar
     * 1.4.15/1.4.16/<1.6.1>
     */
    def cargoVersion = '1.6.1'
    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
            "org.codehaus.cargo:cargo-ant:$cargoVersion"
}

/**
 * configurations for projects
 */
configurations {
    compile.exclude module: "jsp-2.1"
    compile.exclude module: "jsp-api-2.1"
    compile.exclude module: "jasper-compiler"
    compile.exclude module: "jasper-runtime"
    compile.resolutionStrategy.force('xml-apis:xml-apis:1.4.01')
    runtime.resolutionStrategy.force('xml-apis:xml-apis:1.4.01')
    testRuntime.resolutionStrategy.force('xml-apis:xml-apis:1.4.01')

    compile.resolutionStrategy.force('org.apache.mina:mina-core:2.0.7')
    runtime.resolutionStrategy.force('org.apache.mina:mina-core:2.0.7')
    testRuntime.resolutionStrategy.force('org.apache.mina:mina-core:2.0.7')

    compile.resolutionStrategy.force('org.apache.httpcomponents:httpclient:4.5.2')
    runtime.resolutionStrategy.force('org.apache.httpcomponents:httpclient:4.5.2')
    testRuntime.resolutionStrategy.force('org.apache.httpcomponents:httpclient:4.5.2')
}

/**
 * sourceSets setup
 */
sourceSets {
    main {
        println "project.name = ${project.name}"
        println "project.version = ${project.version}"
        println "java.srcDirs = ${java.srcDirs}"
        println "resources.srcDirs = ${resources.srcDirs}"
        println "java.files = ${java.files.name}"
        println "allJava.files = ${allJava.files.name}"
        println "resources.files = ${resources.files.name}"
        println "allSource.files = ${allSource.files.name}"
        println "output.classesDir = ${output.classesDir}"
        println "output.resourcesDir = ${output.resourcesDir}"
        println "output.files = ${output.files}"
    }

}


tasks.withType(Compile) {
    options.encoding = "utf8"
}

/**
 * jar plugin setup
 */
jar {
}

/**
 * war plugin setup
 */
war {

}

/**
 * Cargo is a thin wrapper that allows you to manipulate various type of application containers (Java EE and others) in a standard way.
 */
cargo {
    containerId = 'tomcat8x'
    port = 8080

    def tomcatDir = "$workset_home/apache-tomcat-8.0.36"
    def warFile = project.projectDir.toString() + "/build/libs/" + project.name + "-" + project.version + ".war"

    deployable {
        file = file("$warFile")
        context = "${project.name}"
    }

    local {
        homeDir = file("$tomcatDir")
    }

    remote {
        username = 'admin'
        password = 'admin'
        hostname = "localhost"
    }
}

/**
 * tomcat
 */
tomcat {

}

/**
 * create SourceSets
 */
task createSourceSets {
    war.each {
        project.mkdir(webAppDir)
    }
    sourceSets.each {
        it.allSource.srcDirs.each {
            project.mkdir(it.absolutePath)
        }
    }
}
